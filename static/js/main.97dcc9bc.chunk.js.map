{"version":3,"sources":["components/Actions/Actions.tsx","components/Digits/Digits.tsx","components/ClearButton/ClearButton.tsx","components/EqualButton/EqualButton.tsx","components/DisplayResult/DisplayResult.tsx","components/State/initialState.ts","components/State/reducer.ts","components/App.tsx","serviceWorker.ts","index.tsx"],"names":["Actions","props","handleAction","tabId","divide","multiply","minus","elems","actClick","e","item","target","dataset","act","keyClick","ev","keyCode","click","className","map","idx","role","key","onClick","onKeyDown","tabIndex","data-act","Digits","handleDigit","tr","id","numberClick","data-id","ClearButton","handleClear","EqualButton","handleEqual","DisplayResult","result","initialState","res","a","b","action","calculate","Number","toString","calc","isNaN","reducer","state","newState","type","digit","data","length","split","slice","join","resultToString","newCalcResult","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","toExponential","checkOutofRange","Calculator","useReducer","dispatch","Ref","React","createRef","useEffect","current","focus","keyboard","keyAction","keyNumber","includes","ref","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.97dcc9bc.chunk.js","sourcesContent":["import React from 'react';\n\ninterface ActionsProps {\n  handleAction: (act: string) => void;\n  tabId: number;\n}\n\nconst Actions: React.FC<ActionsProps> = (props: ActionsProps) => {\n  const { handleAction, tabId } = props;\n  const divide = <>&divide;</>;\n  const multiply = <>&times;</>;\n  const minus = <>&ndash;</>;\n  const plus = <>&#43;</>;\n  const elems: Array<JSX.Element> = [plus, minus, multiply, divide];\n  const actItem: Array<string> = ['+', '-', '*', ':'];\n\n  const actClick = (e: React.SyntheticEvent<HTMLDivElement>) => {\n    const item = e.target as HTMLElement;\n    if (item.dataset.act) handleAction(item.dataset.act);\n  };\n\n  const keyClick = (ev: React.KeyboardEvent<HTMLDivElement>) => {\n    const item = ev.target as HTMLElement;\n    if (ev.keyCode === 32) {\n      item.click();\n    }\n  };\n  return (\n    <div className=\"actions\">\n      {actItem.map((item: string, idx: number) => (\n        <div\n          role='button'\n          key={item}\n          className=\"box action\"\n          onClick={actClick}\n          onKeyDown={keyClick}\n          tabIndex={idx + tabId}\n          data-act={item}\n        >\n          {elems[idx]}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Actions;\n","import React from 'react';\n\ninterface DigitsProps {\n  handleDigit: (num: string | undefined) => void;\n}\n\nconst Digits: React.FC<DigitsProps> = (props: DigitsProps) => {\n  const { handleDigit } = props;\n  const digits: Array<number> = [0, 7, 8, 9, 4, 5, 6, 1, 2, 3];\n  const numberClick = (ev: React.SyntheticEvent<HTMLDivElement>) => {\n    const tr = ev.target as HTMLElement;\n    handleDigit(tr.dataset.id);\n  };\n\n  const keyClick = (ev: React.KeyboardEvent<HTMLDivElement>) => {\n    const item = ev.target as HTMLElement;\n    if (ev.keyCode === 32) {\n      item.click();\n    }\n  };\n\n  return (\n    <>\n      {digits.map((item: number, idx: number) => (\n        <div\n          role='button'\n          key={`${item}a`}\n          onClick={(ev) => numberClick(ev)}\n          className=\"box\"\n          data-id={item}\n          onKeyDown={keyClick}\n          tabIndex={item + 2}\n        >\n          {item}\n        </div>\n      ))}\n    </>\n  );\n};\n\nexport default Digits;\n","import React from 'react';\n\ninterface ClearProps {\n  handleClear: () => void;\n  tabId: number;\n}\n\nconst ClearButton: React.FC<ClearProps> = (props: ClearProps) => {\n  const { handleClear, tabId } = props;\n\n  const keyClick = (ev: React.KeyboardEvent<HTMLDivElement>) => {\n    const item = ev.target as HTMLElement;\n    if (ev.keyCode === 32) {\n      item.click();\n    }\n  };\n\n  return (\n    <div\n      role='button'\n      className=\"box action clear\"\n      tabIndex={tabId}\n      onKeyDown={keyClick}\n      onClick={handleClear}\n    >\n      CLR\n    </div>\n  );\n};\n\nexport default ClearButton;\n","import React from 'react';\n\ninterface EqualProps {\n  handleEqual: () => void;\n  tabId: number;\n}\n\nconst EqualButton: React.FC<EqualProps> = (\n  props: EqualProps\n): React.ReactElement => {\n  const { handleEqual, tabId } = props;\n\n  const keyClick = (ev: React.KeyboardEvent<HTMLDivElement>) => {\n    const item = ev.target as HTMLElement;\n    if (ev.keyCode === 32) {\n      item.click();\n    }\n  };\n\n  return (\n    <div\n      role='button'\n      className=\"box equal\"\n      tabIndex={tabId}\n      onKeyDown={keyClick}\n      onClick={handleEqual}\n    >\n      =\n    </div>\n  );\n};\n\nexport default EqualButton;\n","import React from 'react';\n\ninterface ResultProps {\n  result: string | null;\n}\n\nconst DisplayResult: React.FC<ResultProps> = (\n  props: ResultProps\n): React.ReactElement => {\n  let { result } = props;\n  result = result === null ? '0' : result;\n\n  return <div className=\"box result\">{result}</div>;\n};\n\nexport default DisplayResult;\n","const initialState: ResultInit = {\n  res: null,\n  a: null,\n  b: null,\n  action: null,\n};\nexport interface ResultInit {\n  res: null | string;\n  a: null | string;\n  b: null | string;\n  action: null | string | undefined;\n}\n\nexport default initialState;\n","import { ResultInit } from './initialState';\n\nconst RESULT_ERROR: string = 'Error';\n\nexport interface ActionObject {\n  type: string;\n  data?: string | undefined;\n}\n\nfunction calculate(\n  a: string | null,\n  b: string | null,\n  act: string | null | undefined\n): string {\n  if (a !== null && b !== null && act !== null) {\n    let result: string = '';\n    switch (act) {\n      case '+':\n        result = (Number(a) + Number(b)).toString();\n        break;\n      case '-':\n        result = (Number(a) - Number(b)).toString();\n        break;\n      case '*':\n        result = (Number(a) * Number(b)).toString();\n        break;\n      case ':':{\n        const calc: string = (Number(a) / Number(b)).toString();\n        result = isNaN(Number(calc)) ? '0' : calc;\n        result =\n          calc === 'Infinity' || calc === '-Infinity' ? RESULT_ERROR : result;\n      }\n    }\n    return result;\n  }\n  return '';\n}\n\nfunction resultToString(\n  digit: string,\n  state: ResultInit\n): [string, string, string] {\n  let a: string = state.a === null ? '' : state.a;\n  let b: string = state.b === null ? '' : state.b;\n  const act = state.action === null ? '' : state.action;\n  let result = '';\n  if (act === '') {\n    // console.log(a);\n    a =\n      (a + digit).length < 16\n        ? Number(`${a}${digit}`).toString().split('').slice(0, 15).join('')\n        : a;\n  } else {\n    b =\n      (b + digit).length < 16\n        ? Number(`${b}${digit}`).toString().split('').slice(0, 15).join('')\n        : b;\n  }\n  result = `${a} ${act} ${b}`;\n  return [a, b, result];\n}\n\nfunction checkOutofRange(act: string | undefined, calc: string): ResultInit {\n  let newCalcResult = calc;\n  if (\n    Number(newCalcResult) > Number.MAX_SAFE_INTEGER ||\n    Number(newCalcResult) < Number.MIN_SAFE_INTEGER\n  ) {\n    newCalcResult = Number(newCalcResult).toExponential();\n    return { res: newCalcResult, a: null, b: null, action: null };\n  } \n  const a = newCalcResult;\n  const result = `${a} ${act} `;\n  return { res: result, a, b: null, action: act };\n}\n//-----------------------------------------------------------\nfunction reducer(state: ResultInit, action: ActionObject) {\n  let newState: ResultInit = { ...state };\n  switch (action.type) {\n    //-------------------------------------------------------\n    case 'DIGIT_CLICK':{\n      const digit = action.data;\n      if (digit) {\n        const [a, b, result] = resultToString(digit, state);\n        const currentAction = state.action;\n        newState = \n            (currentAction === null)\n              ? { res: result, a, b: state.b, action: state.action }\n              : { res: result, a: state.a, b, action: state.action };\n      }\n      break;\n    }\n    //-------------------------------------------------------\n    case 'EQUAL_CLICK':{\n      if (state.a && state.b && state.action) {\n        const res = calculate(state.a, state.b, state.action);\n        newState = { res, a: null, b: null, action: null };\n      }\n      break;\n    }\n    //-------------------------------------------------------\n    case 'ACTION_CLICK':{\n      let res: string = state.res === null ? '' : state.res;\n      const { a } = state;\n      const { b } = state;\n      if (a !== null) {\n        const act = action.data;\n        if (b === null) {\n          res = state.action\n            ? `${res.split('').slice(0, -3).join('')} ${act} `\n            : `${a} ${act} `;\n          newState = { res, a, b: null, action: act };\n        } else {\n          const calc = calculate(state.a, b, state.action);\n          newState =\n              calc === RESULT_ERROR\n                ? { res: RESULT_ERROR, a: null, b: null, action: null }\n                : { ...checkOutofRange(act, calc) };\n        }\n        // console.log('action:',act);\n      }\n      break;\n    }\n    //-------------------------------------------------------\n    case 'CLEAR_CLICK':{\n      newState = { res: null, a: null, b: null, action: null };\n    }\n  }\n  //-------------------------------------------------------\n  return newState;\n}\n\nexport { reducer };\n","import React, { useEffect, useReducer } from 'react';\nimport Actions from './Actions/Actions';\nimport Digits from './Digits/Digits';\nimport ClearButton from './ClearButton/ClearButton';\nimport EqualButton from './EqualButton/EqualButton';\nimport DisplayResult from './DisplayResult/DisplayResult';\nimport initialState from './State/initialState';\nimport { reducer } from './State/reducer';\nimport '../index.scss';\n\nconst NUMBERS: string = '0123456789';\nconst BACKSPACE: number = 8;\nconst DELETE: number = 46;\nconst ESCAPE: number = 27;\nconst INIT_FOCUS: number = -1;\nconst FIRST_FOCUS: number = 1;\nconst SECOND_FOCUS: number = 2;\nconst LAST_FOCUS: number = 12;\n\ninterface Rref extends HTMLDivElement {\n  readonly current: HTMLDivElement | null;\n}\n\nconst Calculator: React.FC = () => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const Ref: React.RefObject<Rref> = React.createRef();\n\n  const handleDigit = (digit: string | undefined) => {\n    dispatch({ type: 'DIGIT_CLICK', data: digit });\n  };\n\n  const handleEqual = () => {\n    dispatch({ type: 'EQUAL_CLICK' });\n  };\n\n  const handleClear = () => {\n    dispatch({ type: 'CLEAR_CLICK' });\n  };\n\n  const handleAction = (act: string) => {\n    dispatch({ type: 'ACTION_CLICK', data: act });\n  };\n\n  const keyPress = (keyboard: React.KeyboardEvent<HTMLDivElement>) => {\n    // console.log(keyboard.keyCode, keyboard.key);\n    const keyAction: string = keyboard.key;\n    const keyNumber: string = keyboard.key;\n    const { keyCode } = keyboard;\n\n    switch (keyAction) {\n      case '+':\n        handleAction(keyAction);\n        //\n        break;\n      case '-':\n        handleAction(keyAction);\n        //\n        break;\n      case '*':\n        handleAction(keyAction);\n        //\n        break;\n      case '/':\n        handleAction(':');\n        //\n        break;\n      case 'Enter':\n        handleEqual();\n      //\n    }\n    if (NUMBERS.includes(keyNumber)) {\n      handleDigit(keyNumber);\n    }\n    if (keyCode === BACKSPACE || keyCode === DELETE || keyCode === ESCAPE) {\n      handleClear();\n    }\n  };\n\n  useEffect(() => {\n    if (Ref.current) Ref.current.focus();\n    // console.log('rerender...');\n  }, [Ref]);\n\n  return (\n    <>\n      <h1>Calculator</h1>\n      <div\n        role='grid'\n        className=\"container\"\n        onKeyDown={keyPress}\n        tabIndex={INIT_FOCUS}\n        ref={Ref}\n      >\n        <DisplayResult result={state.res} />\n        <div className=\"digits\">\n          <div className=\"d-grid\">\n            <ClearButton handleClear={handleClear} tabId={FIRST_FOCUS} />\n            <EqualButton handleEqual={handleEqual} tabId={SECOND_FOCUS} />\n            <Digits handleDigit={handleDigit} />\n          </div>\n        </div>\n        <Actions handleAction={handleAction} tabId={LAST_FOCUS} />\n      </div>\n    </>\n  );\n};\n\nexport default Calculator;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Calculator from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Calculator />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}